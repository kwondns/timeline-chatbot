version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID
    IMAGE_REPO_NAME: $IMAGE_REPO_NAME
    LAMBDA_FUNCTION_NAME: $LAMBDA_FUNCTION_NAME

phases:
  pre_build:
    commands:
      - echo "=== Environment Variables Debug ==="
      - echo "AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"
      - echo "AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID"
      - echo "ECR_REPOSITORY_NAME: $ECR_REPOSITORY_NAME"
      - echo "LAMBDA_FUNCTION_NAME: $LAMBDA_FUNCTION_NAME"

      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - echo "REPOSITORY_URI: $REPOSITORY_URI"

      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Updating Lambda function...
      - aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri $REPOSITORY_URI:latest
      - echo Lambda function updated successfully!

artifacts:
  files:
    - '**/*'
